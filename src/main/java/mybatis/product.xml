<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 		 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- product.xml -->

<mapper namespace="product.model.ProductBean">

<!-- 메인 전체 상품 검색 -->
<select id="getSearchList" resultType="product.model.ProductBean">
	select * from product
	<if test="keyword != null">
		where subject like #{keyword}
	</if>
	order by no desc
</select>

<!-- 메인 인기상품  -->
<select id="getPopList" resultType="product.model.ProductBean">
	<!-- select rank, seller_id, subject, price, readcount, category, address1, address2, image1, reg_date
	from (select rownum as rank, seller_id, subject, price, readcount, category, address1, address2, image1, reg_date
	from product
	where deal_status = 1
	 order by readcount desc)
	where rank between 1 and 12
	order by readcount desc -->
	
	select rank, no, seller_id, subject, price, readcount, category, address1, address2, image1, reg_date
	from (select rank() over(order by readcount desc) as rank,
	no,seller_id, subject, price, readcount, category, address1, address2, image1, reg_date
	from product )
	where rank between 1 and 12
</select>

<!-- 상품 목록 조회 -->
<select id="getList" resultType="product.model.ProductBean">
	select * from product
</select>

<!-- 상품 등록 -->
<insert id="insertProduct">
	insert into product values(
	prdseq.nextval, #{sellerid}, #{subject}, #{category}, #{address}, #{address1}, #{address2}, #{address3}, 
	#{contents}, #{price}, #{refundavailability}, sysdate, default, 0, #{image1}
	)
</insert>

<!-- 상품 이미지 업로드 -->
<insert id="fileUpload">
	insert into product_file
	values(prdfile_seq.nextval, #{pno}, #{saveFileName} )
</insert>

<select id="getPno" resultType="int">
	select max(no) from product
</select>

<update id="fileUpload2">
	update product
	set image1 = #{saveFileName}
	where no = #{pno}
</update>

<!-- 상품 상세보기 -->
<select id="getProduct" resultType="product.model.ProductBean">
	select * from product
	where no = #{no}
</select>

<select id="getFile" resultType="product.model.ProductFileBean">
	select * from product_file
	where pno = #{no}
</select>


<!-- 상품 찜하기 갯수 확인 -->
<select id="getLike" resultType="product.model.ProductLikeBean">
	select * from product_like
	where product_no = #{no}
</select>

<!-- 상품 좋아요 -->
<insert id="productLike">
	insert into product_like
	values(prdseq_like.nextval, #{productno}, #{userid})
</insert>

<!-- 상품 싫어요 -->
<delete id="productunLike">
	delete from product_like
	where  no = #{no}
</delete>

<!-- 조회수 -->
<update id="incrementReadCount">
	update product set readcount = readcount+1
	where no = #{no}
</update>

<!-- 나의당근 판매내역 -->
<select id="getListById" resultType="product.model.ProductBean">
	select p.no,p.seller_id, p.subject, pc.category_name, p.contents, p.price, p.reg_date, p.readcount, p.image1, p.deal_status
	from product p, product_category pc 
	where p.category = pc.no and p.seller_id = #{loginID}
	order by p.no desc
</select>

<!-- 나의 당근 구매내역 -->
<select id="GetPurListById" resultType="member.model.MemberDealBean">
	select * from member_deal where buyer_id = #{loginID}
</select>

<!-- 아이디 기준 판매자 정보 조회 -->
<select id="getSellerInfo" resultType="member.model.MemberBean">
	select * from member
	where id = #{sellerid}
</select>

<!-- 상품 카테고리 전체 호출 -->
<select id="getAllCategory" resultType="product.model.ProdCategoryBean">
	select * from product_category
</select>

<!-- 나의 당근 찜한 상품 리스트  -->
<select id="GetLikeProdList" resultType="product.model.ProductBean">
	select pro.no,prolike.user_id,pro.seller_id,pro.subject,pro.category,pro.address1,pro.address2,pro.contents,pro.price,pro.refund_availability,pro.reg_date,pro.deal_status,pro.readcount,pro.image1
	from product pro, product_like prolike
	where pro.no = prolike.product_no and prolike.user_id = #{loginID}
</select>


<update id="updateProduct">
	update product
	set subject = #{subject}, category = #{category}, address1= #{address1},
	address2 = #{address2}, contents = #{contents}, price = #{price}, refund_availability = #{refundavailability},
	reg_date = sysdate, deal_status = ${dealstatus}, image1 = #{image1} 
	where no = ${no}
</update>

<!-- 상품 삭제 -->
<delete id="deleteByNo">
  	delete from product where no = #{pno}
</delete>

<!-- 판매상태 업데이트 -->
<update id="upDealStatus">
	update product set deal_status = #{dealstatus} where no = ${no}

</update>

<delete id="deleteFile">
	delete from product_file
	where filename = ${filename}
</delete>

<select id="checkChat" resultType="int">
	select count(*) from prd_reply
	where pno = #{pno} and buyer_id = #{buyerid} and seller_id = #{sellerid}
</select>

<insert id="createChat">
	insert into prd_reply
	values(reply_seq.nextval, #{pno}, #{sellerid}, #{buyerid}, '채팅이 연결 되었습니다', sysdate )
</insert>

<select id="getChat" resultType="product.model.ProductChatBean">
	select * from prd_reply
	where pno = #{pno} and buyer_id = #{buyerid} and seller_id = #{sellerid}
	order by reg_date
</select>

<insert id="insertChat">
	insert into prd_reply
	values(reply_seq.nextval, #{pno}, #{sellerid}, #{buyerid}, #{contents}, sysdate )
</insert>
</mapper>